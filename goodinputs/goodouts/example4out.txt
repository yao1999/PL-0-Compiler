7 0 0 32	jump to start
7 0 0 23	jump to a
7 0 0 14	jump to b
7 0 0 4		jump to c
6 0 0 6		load up y, z				START C
1 0 0 1		get 1 store in reg0
4 0 0 5		store reg0(1) in z
3 0 0 4		load y in reg 0
3 1 0 5		load z in reg 1
13 0 0 1	reg0 + reg 1, store in reg 0
3 1 3 8		load w (top level) in reg 1
13 0 0 1	reg 0 + reg 1, store in reg 0
4 0 2 4		store reg 0 in x (within A)
2 0 0 0		return from C				END C
6 0 0 7		create room for y, z, v			START B
3 0 1 4		load x(within A) into reg 0
3 1 1 6		load u(within A) into reg 1
13 0 0 1	reg0+reg1, store in reg0
3 1 2 8		load w(top level) into reg 1
13 0 0 1	reg0+reg1, store in reg0
4 0 0 4		store reg 0 in u
5 0 2 4		call C, 4=line c begins on
2 0 0 0 	return from B				END B
6 0 0 8		create room for x,y,u,v			START A
1 0 0 2		load 2 into reg 0
4 0 1 6		store reg0 in z
3 0 1 6		load z into reg0
3 1 1 8		load w into reg 1
13 0 0 1	reg 0+ reg 1, store in reg0
4 0 0 6		store reg 0 in u
5 0 1 14	call B, 14 = line B begins on
2 0 0 0		return from a				END A
6 0 0 9		create room for x, y, z, v, w		START PROGRAM
1 0 0 1		load 1 into reg 0
4 0 0 4		store 1 in x
1 0 0 2		load 2 into reg 0
4 0 0 5		store 2 in y
1 0 0 3		load 3 into reg 0
4 0 0 6		store 3 in z
1 0 0 4		load 4 into reg 0
4 0 0 7		store 4 in v
1 0 0 5		load 5 into reg 0
4 0 0 8		store 5 in w
3 0 0 7		load v into reg 0
3 1 0 8		load w into reg 1
13 0 0 1	reg0+reg1, store in reg0
4 0 0 4		store reg 0 in x
3 0 0 6		load z into reg 0
9 0 0 1		write z
5 0 0 23	call a, 23 = line A is on
11 0 0 3	end program				END PROGRAM
